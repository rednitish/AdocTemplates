{"version":3,"sources":["../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/extends/_extends.scss","pfe-icon.css","pfe-icon.scss","../../pfe-sass/functions/_custom-properties.scss"],"names":[],"mappings":"AAGM;ECyLF;IDzLwF,UAAA;IEoDxF,yBAAiC;ECnDnC;AACF;;AFkLI;EAtHM,qEAA+D;EAA/D,sFAA+D;EAA/D,wEAA+D;EAA/D,sFAA+D;EAA/D,sFAA+D;EAA/D,0FAA+D;EAA/D,oFAA+D;EAA/D,uGAA+D;EAA/D,uGAA+D;EAA/D,sGAA+D;AE/CzE;;AFqKI;EAtHM,0EAA+D;EAA/D,2FAA+D;EAA/D,0EAA+D;EAA/D,2FAA+D;EAA/D,2FAA+D;EAA/D,+FAA+D;EAA/D,8FAA+D;EAA/D,4GAA+D;EAA/D,4GAA+D;EAA/D,gHAA+D;AElCzE;;AFwJI;EAtHM,+DAA+D;EAA/D,6EAA+D;EAA/D,4DAA+D;EAA/D,6EAA+D;EAA/D,6EAA+D;EAA/D,iFAA+D;EAA/D,2EAA+D;EAA/D,8FAA+D;EAA/D,8FAA+D;EAA/D,6FAA+D;AErBzE;;ACUA;EACE,0CAAU;EAEV,kBAAkB;EAClB,qBAAsB;EAGtB,0CAAoC;UAApC,kCAAoC;EAEpC,qCAAoC;EAApC,kCAAoC;EAApC,6BAAoC;EACpC,sCAAoC;EAApC,mCAAoC;EAApC,8BAAoC;EACpC,cAAe;EAEf,cCYkC;EDZlC,kECYkC;EDXlC,eCWkC;EDXlC,mECWkC;AFvBpC;;AHrDM;EImDN;IJnD4F,UAAA;IIoExF,qBAAiC;IAAjC,kDAAiC;IACjC,sBAAkC;IAAlC,mDAAkC;EDTpC;AACF;;ACVA;EAsBI,UCGgC;EDHhC,8DCGgC;EDFhC,WCEgC;EDFhC,+DCEgC;AFVpC;;AHlEM;EImDN;IJnD4F,UAAA;II6EtF,qBAAiC;IAAjC,kDAAiC;IACjC,sBAAkC;IAAlC,mDAAkC;EDLtC;AACF;;ACSA;EACE,cAAc;EACd,mBCTkC;EDSlC,iFCTkC;EDUlC,gBCVkC;EDUlC,8ECVkC;AFIpC;;ACGA;EAMI,aAAa;ADLjB;;ACSA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,6BCpBkC;EDoBlC,+DCpBkC;EDqBlC,6BCrBkC;EDqBlC,mMCrBkC;EDsBlC,UCtBkC;EDsBlC,oCCtBkC;AFgBpC;;AH5FM;EI6FN;IJ7F4F,UAAA;IIuB1F,kCAAkC;ED2ElC;ECzEA;IACE,6BAA6B;ED2E/B;AACF;;AHjGuC;EIwFvC;IJxF0C,+BAAA;IIkBxC,kCAAkC;EDqFlC;ECnFA;IACE,6BAA6B;EDqF/B;AACF;;AHhHM;EI6FN;IJ7F4F,UAAA;II+GtF,oBAAY;YAAZ,YAAY;EDOhB;AACF;;AC1BA;EAuBI,oBCxCgC;EDwChC,kGCxCgC;AF+CpC;;AC9BA;EA2BI,aAAa;ADOjB;;ACFE;EA7FA,cC4CkC;ED5ClC,qCC4CkC;ED3ClC,eC2CkC;ED3ClC,sCC2CkC;AFwDpC;;AHpIM;EI6HJ;IJ7H0F,UAAA;IIoCxF,qBAA+B;IAC/B,sBAAgC;EDsGlC;AACF;;ACpGE;EACE,UCmCgC;EDnChC,iCCmCgC;EDlChC,WCkCgC;EDlChC,kCCkCgC;AFqEpC;;AHjJM;EIwCJ;IJxC0F,UAAA;II6CtF,qBAA+B;IAC/B,sBAAgC;ED0GpC;AACF;;AC5BE;EA7FA,cC4CkC;ED5ClC,qCC4CkC;ED3ClC,eC2CkC;ED3ClC,sCC2CkC;AFkFpC;;AH9JM;EI6HJ;IJ7H0F,UAAA;IIoCxF,qBAA+B;IAC/B,sBAAgC;EDgIlC;AACF;;AC9HE;EACE,UCmCgC;EDnChC,iCCmCgC;EDlChC,WCkCgC;EDlChC,kCCkCgC;AF+FpC;;AH3KM;EIwCJ;IJxC0F,UAAA;II6CtF,qBAA+B;IAC/B,sBAAgC;EDoIpC;AACF;;ACtDE;EA7FA,cC4CkC;ED5ClC,qCC4CkC;ED3ClC,eC2CkC;ED3ClC,sCC2CkC;AF4GpC;;AHxLM;EI6HJ;IJ7H0F,UAAA;IIoCxF,qBAA+B;IAC/B,sBAAgC;ED0JlC;AACF;;ACxJE;EACE,UCmCgC;EDnChC,iCCmCgC;EDlChC,WCkCgC;EDlChC,kCCkCgC;AFyHpC;;AHrMM;EIwCJ;IJxC0F,UAAA;II6CtF,qBAA+B;IAC/B,sBAAgC;ED8JpC;AACF;;AClEE;EA3GA,gBC4CkC;ED5ClC,uCC4CkC;ED3ClC,iBC2CkC;ED3ClC,wCC2CkC;AFsIpC;;AHlNM;EI2IJ;IJ3I0F,UAAA;IIoCxF,uBAA+B;IAC/B,wBAAgC;EDoLlC;AACF;;AClLE;EACE,YCmCgC;EDnChC,mCCmCgC;EDlChC,aCkCgC;EDlChC,oCCkCgC;AFmJpC;;AH/NM;EIwCJ;IJxC0F,UAAA;II6CtF,uBAA+B;IAC/B,wBAAgC;EDwLpC;AACF;;AC5FE;EA3GA,eC4CkC;ED5ClC,sCC4CkC;ED3ClC,gBC2CkC;ED3ClC,uCC2CkC;AFgKpC;;AH5OM;EI2IJ;IJ3I0F,UAAA;IIoCxF,sBAA+B;IAC/B,uBAAgC;ED8MlC;AACF;;AC5ME;EACE,WCmCgC;EDnChC,kCCmCgC;EDlChC,YCkCgC;EDlChC,mCCkCgC;AF6KpC;;AHzPM;EIwCJ;IJxC0F,UAAA;II6CtF,sBAA+B;IAC/B,uBAAgC;EDkNpC;AACF;;ACtHE;EA3GA,eC4CkC;ED5ClC,sCC4CkC;ED3ClC,gBC2CkC;ED3ClC,uCC2CkC;AF0LpC;;AHtQM;EI2IJ;IJ3I0F,UAAA;IIoCxF,sBAA+B;IAC/B,uBAAgC;EDwOlC;AACF;;ACtOE;EACE,WCmCgC;EDnChC,kCCmCgC;EDlChC,YCkCgC;EDlChC,mCCkCgC;AFuMpC;;AHnRM;EIwCJ;IJxC0F,UAAA;II6CtF,sBAA+B;IAC/B,uBAAgC;ED4OpC;AACF;;AChJE;EA3GA,eC4CkC;ED5ClC,sCC4CkC;ED3ClC,gBC2CkC;ED3ClC,uCC2CkC;AFoNpC;;AHhSM;EI2IJ;IJ3I0F,UAAA;IIoCxF,sBAA+B;IAC/B,uBAAgC;EDkQlC;AACF;;AChQE;EACE,WCmCgC;EDnChC,kCCmCgC;EDlChC,YCkCgC;EDlChC,mCCkCgC;AFiOpC;;AH7SM;EIwCJ;IJxC0F,UAAA;II6CtF,sBAA+B;IAC/B,uBAAgC;EDsQpC;AACF;;ACpKA;EACE,cCtEkC;EDsElC,wCCtEkC;EDuElC,sBCvEkC;EDuElC,oGCvEkC;EDwElC,qBCxEkC;EDwElC,+HCxEkC;AF+OpC;;ACnKE;;EAGI,oBC/E8B;ED+E9B,iHC/E8B;AFoPpC;;AC/JE,4DAAA;AACA;EAGE,yBCzFgC;EDyFhC,wGCzFgC;ED0FhC,qBC1FgC;ED0FhC,kIC1FgC;ED6F9B,yBAAoB;AD8J1B;;AC/KE;;EAGI,oBC/E8B;ED+E9B,kHC/E8B;AFgQpC;;AC3KE,4DAAA;AACA;EAGE,yBCzFgC;EDyFhC,yGCzFgC;ED0FhC,qBC1FgC;ED0FhC,mIC1FgC;ED6F9B,yBAAoB;AD0K1B;;AC3LE;;EAGI,oBC/E8B;ED+E9B,iHC/E8B;AF4QpC;;ACvLE,4DAAA;AACA;EAGE,yBCzFgC;EDyFhC,wGCzFgC;ED0FhC,qBC1FgC;ED0FhC,kIC1FgC;AFkRpC;;ACtME;;EAGI,oBC/E8B;ED+E9B,gHC/E8B;AFuRpC;;AClME,4DAAA;AACA;EAGE,yBCzFgC;EDyFhC,uGCzFgC;ED0FhC,qBC1FgC;ED0FhC,iIC1FgC;ED6F9B,yBAAoB;ADiM1B;;AClNE;;EAGI,iBC/E8B;ED+E9B,0GC/E8B;AFmSpC;;AC9ME,4DAAA;AACA;EAGE,sBCzFgC;EDyFhC,iGCzFgC;ED0FhC,kBC1FgC;ED0FhC,2HC1FgC;ED6F9B,yBAAoB;AD6M1B;;AC9NE;;EAGI,oBC/E8B;ED+E9B,gHC/E8B;AF+SpC;;AC1NE,4DAAA;AACA;EAGE,yBCzFgC;EDyFhC,uGCzFgC;ED0FhC,qBC1FgC;ED0FhC,iIC1FgC;ED6F9B,yBAAoB;ADyN1B;;ACnNE;;EAGI,iBCtG8B;EDsG9B,6GCtG8B;AF2TpC;;AChNE,4DAAA;AACA;EACE,+EAAoB;EAIpB,sBCjHgC;EDiHhC,oGCjHgC;EDkHhC,kBClHgC;EDkHhC,8HClHgC;AFkUpC;;AC/NE;;EAGI,oBCtG8B;EDsG9B,4GCtG8B;AFuUpC;;AC5NE,4DAAA;AACA;EACE,2EAAoB;EAIpB,yBCjHgC;EDiHhC,mGCjHgC;EDkHhC,qBClHgC;EDkHhC,6HClHgC;AF8UpC;;AC3OE;;EAGI,oBCtG8B;EDsG9B,8GCtG8B;AFmVpC;;ACxOE,4DAAA;AACA;EACE,4EAAoB;EAIpB,yBCjHgC;EDiHhC,qGCjHgC;EDkHhC,qBClHgC;EDkHhC,+HClHgC;AF0VpC;;ACvPE;;EAGI,oBCtG8B;EDsG9B,+GCtG8B;AF+VpC;;ACpPE,4DAAA;AACA;EACE,6EAAoB;EAIpB,yBCjHgC;EDiHhC,sGCjHgC;EDkHhC,qBClHgC;EDkHhC,gIClHgC;AFsWpC;;ACnQE;;EAGI,oBCtG8B;EDsG9B,kHCtG8B;AF2WpC;;AChQE,4DAAA;AACA;EACE,qFAAoB;EAIpB,yBCjHgC;EDiHhC,yGCjHgC;EDkHhC,qBClHgC;EDkHhC,mIClHgC;AFkXpC;;AC/QE;;EAGI,oBCtG8B;EDsG9B,8GCtG8B;AFuXpC;;AC5QE,4DAAA;AACA;EACE,iFAAoB;EAIpB,yBCjHgC;EDiHhC,qGCjHgC;EDkHhC,qBClHgC;EDkHhC,+HClHgC;AF8XpC;;ACxQA;;;EAGE,aAAa;AD2Qf;;ACxQA;EAxKE,YC4CkC;ED5ClC,mCC4CkC;ED3ClC,aC2CkC;ED3ClC,oCC2CkC;AFyYpC;;AHrdM;EIwMN;IJxM4F,UAAA;IIoCxF,mBAA+B;IAC/B,oBAAgC;EDublC;AACF;;ACrbE;EACE,QCmCgC;EDnChC,+BCmCgC;EDlChC,SCkCgC;EDlChC,gCCkCgC;AFsZpC;;AHleM;EIwCJ;IJxC0F,UAAA;II6CtF,mBAA+B;IAC/B,oBAAgC;ED2bpC;AACF","file":"pfe-icon.css","sourcesContent":["@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: pfe-var(surface--border-style);\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-hidden {\n  @at-root #{&}([hidden]) {\n    display: none;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// This will print all the broadcast variables, and set the value to the context of your choosing, like on-dark or on-saturated.\n/// @param {String} $context - Look up values from contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @see $custom-prop-prefix\n/// @see $BROADCAST-VARS\n/// @example - scss - Usage in a container component, i.e. pfe-card\n///    :host {\n///      @include pfe-set-broadcast-context(dark);\n///    }\n/// @example - css - Rendered output\n///   :host {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///\n@mixin pfe-set-broadcast-context($context, $broadcast: $BROADCAST-VARS) {\n  @each $type in $broadcast {\n    $list: ();\n    $string: \"\";\n    $context_string: \"\";\n    $state: \"\";\n\n    @if str-starts-with($type, \"link\") {\n      $list: append($list, \"#{$type}\");\n\n      @each $s in (hover, focus, visited) {\n        $state: \"--#{$s}\";\n        $string: \"#{$type}#{$state}\";\n\n        @if not index($list, $string) {\n          $list: append($list, \"#{$type}#{$state}\");\n        }\n      }\n    } @else {\n      @if not index($list, $string) {\n        $list: append($list, \"#{$type}\");\n      }\n    }\n\n    @if index($CONTEXTS, $context) != null {\n      @if $context != \"light\" {\n        $context_string: \"--on-#{$context}\";\n      }\n    }\n\n    @each $item in $list {\n      @if not index($BROADCAST-VARS, $type) {\n        @warn \"--#{$custom-prop-prefix}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n      } @else if not pfe-broadcasted(#{$item}#{$context_string}) {\n        @warn \"#{$item}#{$context_string} value does not currently exist.\";\n      } @else {\n        @if index($CONTEXTS, $context) != null {\n          --#{$custom-prop-prefix}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context_string})};\n        } @else {\n          @error \"The #{$context} context does not appear to be part of a supported context.\";\n        }\n      }\n    }\n  }\n}\n\n/// Returns CSS Variable for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example - scss\n///   :host {\n///       padding-top:      pfe-local(paddingTop);\n///       padding-bottom:   pfe-local(paddingBottom);\n///   }\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n  @each $property, $value in $map {\n    $name: \"--#{$property}\";\n    $styles: $value;\n\n    @if type-of($value) == \"map\" {\n      @each $prop, $v in $value {\n        $name: \"__#{$property}--#{$prop}\";\n        $styles: $v;\n\n        // Print the variable definition\n        --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n      }\n    } @else {\n      // Print the variable definition\n      --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n    }\n  }\n}\n\n/// Surface properties\n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct context colors.\n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n/// @example - scss - In your component stylesheet\n///   $LOCAL: band;\n///   @include pfe-surfaces;\n/// @example - css - Rendered result\n///   :host([color=\"darker\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///     --context: dark;\n///   }\n///   :host([color=\"darkest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///     --context: dark;\n///   }\n///   :host([color=\"base\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///     --context: light;\n///   }\n///   :host([color=\"lighter\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///     --context: light;\n///   }\n///   :host([color=\"lightest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///     --context: light;\n///   }\n///   :host([color=\"accent\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///     --context: saturated;\n///   }\n///   :host([color=\"complement\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///     --context: saturated;\n///   }\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: color) {\n  @each $color in $surfaces {\n    $context: #{pfe-get-context(surface--#{$color}--context)};\n    :host([#{$attr-name}=\"#{$color}\"]) {\n      @include pfe-print-local(\n        (\n          BackgroundColor: pfe-var(surface--#{$color}),\n          context: pfe-var(surface--#{$color}--context, #{$context})\n        )\n      );\n      @extend %fallback-surface;\n    }\n  }\n}\n\n/// Prints the `on` attribute with IE11 fallbacks\n/// @param {List} contexts [$CONTEXTS] - defaults to the global $CONTEXTS list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example - scss - In your component styles\n///   @include pfe-contexts; // imports on=\"light\" etc support\n/// @example - css - Rendered outputs\n///   :host([on=\"dark\"]) {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///   @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///     :host([on=\"dark\"]) {\n///       color: #fff;\n///       color: var(--pfe-theme--color--text--on-dark, #fff);\n///     }\n///   }\n///   // ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"])\n@mixin pfe-contexts($contexts: $CONTEXTS, $ie-fallback: true) {\n  // Helper attributes to aid in theming\n  @each $context in $contexts {\n    :host([on=\"#{$context}\"]) {\n      @include pfe-set-broadcast-context($context);\n    }\n  }\n  @if $ie-fallback {\n    :host {\n      @extend %fallback-text;\n    }\n  }\n}\n","// @todo Change to mixins; no efficiency gain with placeholders in web components\n\n/// Clear box element styles\n%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n/// Clear list styles\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n/// Clear button styles\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n/// Set up a container element\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: pfe-var(container-padding);\n}\n\n/// Screen-reader only content\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n/// Fallback surface styles for IE11 only\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n/// Fallback text styles for IE11 only\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    color: #151515 !important;\n  }\n}\n\n:host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #73bcf7);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #bee1f4);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #bee1f4);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #bee1f4);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-dark, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-dark, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-dark, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-dark, none);\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, #fafafa);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, #fafafa);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus--on-saturated, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited--on-saturated, underline);\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--text--muted: var(--pfe-theme--color--text--muted, #6a6e73);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n}\n\n:host {\n  --context: var(--pfe-icon--context, light);\n  position: relative;\n  display: inline-block;\n  box-sizing: content-box !important;\n  width: fit-content !important;\n  height: fit-content !important;\n  line-height: 0;\n  max-width: var(--pfe-icon--size, var(--pfe-theme--icon-size, 1em));\n  max-height: var(--pfe-icon--size, var(--pfe-theme--icon-size, 1em));\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host {\n    /* IE10+ */\n    width: var(--pfe-theme--icon-size, 1em) !important;\n    height: var(--pfe-theme--icon-size, 1em) !important;\n  }\n}\n\n:host svg {\n  width: var(--pfe-icon--size, var(--pfe-theme--icon-size, 1em));\n  height: var(--pfe-icon--size, var(--pfe-theme--icon-size, 1em));\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host svg {\n    /* IE10+ */\n    width: var(--pfe-theme--icon-size, 1em) !important;\n    height: var(--pfe-theme--icon-size, 1em) !important;\n  }\n}\n\n:host([block]) {\n  display: block;\n  margin-bottom: var(--pfe-icon--spacing, var(--pfe-theme--container-spacer, 1rem));\n  margin-top: var(--pfe-icon--spacing, var(--pfe-theme--container-spacer, 1rem));\n}\n\n:host([block]):first-child {\n  margin-top: 0;\n}\n\n:host(:not(.load-failed)) {\n  vertical-align: middle;\n  border-radius: 50%;\n  background-color: var(--pfe-icon--BackgroundColor, transparent);\n  border: var(--pfe-icon--BorderWidth, var(--pfe-theme--ui--border-width, 1px)) var(--pfe-theme--ui--border-style, solid) var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, transparent));\n  padding: var(--pfe-icon--Padding, 0);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(:not(.load-failed)) {\n    /* IE10+ */\n    background-color: white !important;\n  }\n  :host(:not(.load-failed)) svg filter feFlood {\n    flood-color: black !important;\n  }\n}\n\n@supports (-ms-accelerator: true) {\n  :host(:not(.load-failed)) {\n    /* Microsoft Edge Browser 12+ */\n    background-color: white !important;\n  }\n  :host(:not(.load-failed)) svg filter feFlood {\n    flood-color: black !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(:not(.load-failed)) svg image {\n    /* IE10+ */\n    filter: none;\n  }\n}\n\n:host(:not(.load-failed)) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-broadcasted--text, #3c3f42)));\n}\n\n:host(:not(.load-failed)) .pfe-icon--fallback {\n  display: none;\n}\n\n:host([size=\"2x\"]) {\n  max-width: var(--pfe-icon--size, 2em);\n  max-height: var(--pfe-icon--size, 2em);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"2x\"]) {\n    /* IE10+ */\n    width: 2em !important;\n    height: 2em !important;\n  }\n}\n\n:host([size=\"2x\"]) svg {\n  width: var(--pfe-icon--size, 2em);\n  height: var(--pfe-icon--size, 2em);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"2x\"]) svg {\n    /* IE10+ */\n    width: 2em !important;\n    height: 2em !important;\n  }\n}\n\n:host([size=\"3x\"]) {\n  max-width: var(--pfe-icon--size, 3em);\n  max-height: var(--pfe-icon--size, 3em);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"3x\"]) {\n    /* IE10+ */\n    width: 3em !important;\n    height: 3em !important;\n  }\n}\n\n:host([size=\"3x\"]) svg {\n  width: var(--pfe-icon--size, 3em);\n  height: var(--pfe-icon--size, 3em);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"3x\"]) svg {\n    /* IE10+ */\n    width: 3em !important;\n    height: 3em !important;\n  }\n}\n\n:host([size=\"4x\"]) {\n  max-width: var(--pfe-icon--size, 4em);\n  max-height: var(--pfe-icon--size, 4em);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"4x\"]) {\n    /* IE10+ */\n    width: 4em !important;\n    height: 4em !important;\n  }\n}\n\n:host([size=\"4x\"]) svg {\n  width: var(--pfe-icon--size, 4em);\n  height: var(--pfe-icon--size, 4em);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"4x\"]) svg {\n    /* IE10+ */\n    width: 4em !important;\n    height: 4em !important;\n  }\n}\n\n:host([size=\"xl\"]) {\n  max-width: var(--pfe-icon--size, 100px);\n  max-height: var(--pfe-icon--size, 100px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"xl\"]) {\n    /* IE10+ */\n    width: 100px !important;\n    height: 100px !important;\n  }\n}\n\n:host([size=\"xl\"]) svg {\n  width: var(--pfe-icon--size, 100px);\n  height: var(--pfe-icon--size, 100px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"xl\"]) svg {\n    /* IE10+ */\n    width: 100px !important;\n    height: 100px !important;\n  }\n}\n\n:host([size=\"lg\"]) {\n  max-width: var(--pfe-icon--size, 64px);\n  max-height: var(--pfe-icon--size, 64px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"lg\"]) {\n    /* IE10+ */\n    width: 64px !important;\n    height: 64px !important;\n  }\n}\n\n:host([size=\"lg\"]) svg {\n  width: var(--pfe-icon--size, 64px);\n  height: var(--pfe-icon--size, 64px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"lg\"]) svg {\n    /* IE10+ */\n    width: 64px !important;\n    height: 64px !important;\n  }\n}\n\n:host([size=\"md\"]) {\n  max-width: var(--pfe-icon--size, 32px);\n  max-height: var(--pfe-icon--size, 32px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"md\"]) {\n    /* IE10+ */\n    width: 32px !important;\n    height: 32px !important;\n  }\n}\n\n:host([size=\"md\"]) svg {\n  width: var(--pfe-icon--size, 32px);\n  height: var(--pfe-icon--size, 32px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"md\"]) svg {\n    /* IE10+ */\n    width: 32px !important;\n    height: 32px !important;\n  }\n}\n\n:host([size=\"sm\"]) {\n  max-width: var(--pfe-icon--size, 14px);\n  max-height: var(--pfe-icon--size, 14px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"sm\"]) {\n    /* IE10+ */\n    width: 14px !important;\n    height: 14px !important;\n  }\n}\n\n:host([size=\"sm\"]) svg {\n  width: var(--pfe-icon--size, 14px);\n  height: var(--pfe-icon--size, 14px);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([size=\"sm\"]) svg {\n    /* IE10+ */\n    width: 14px !important;\n    height: 14px !important;\n  }\n}\n\n:host([circled]:not([circled=\"false\"])) {\n  padding: var(--pfe-icon--Padding, 0.5em);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--border, #d2d2d2)));\n}\n\n:host([color=\"critical\"]:not([circled])) filter feFlood,\n:host([color=\"critical\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--feedback--critical, #a30000)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=\"critical\"][circled]:not([circled=\"false\"])) {\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--critical, #a30000));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--critical, #a30000)));\n  --pfe-icon--context: dark;\n}\n\n:host([color=\"important\"]:not([circled])) filter feFlood,\n:host([color=\"important\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--feedback--important, #c9190b)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=\"important\"][circled]:not([circled=\"false\"])) {\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--important, #c9190b));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--important, #c9190b)));\n  --pfe-icon--context: dark;\n}\n\n:host([color=\"moderate\"]:not([circled])) filter feFlood,\n:host([color=\"moderate\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--feedback--moderate, #f0ab00)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=\"moderate\"][circled]:not([circled=\"false\"])) {\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--moderate, #f0ab00));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--moderate, #f0ab00)));\n}\n\n:host([color=\"success\"]:not([circled])) filter feFlood,\n:host([color=\"success\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--feedback--success, #3e8635)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=\"success\"][circled]:not([circled=\"false\"])) {\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--success, #3e8635));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--success, #3e8635)));\n  --pfe-icon--context: dark;\n}\n\n:host([color=\"info\"]:not([circled])) filter feFlood,\n:host([color=\"info\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--feedback--info, #06c)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=\"info\"][circled]:not([circled=\"false\"])) {\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--info, #06c));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--info, #06c)));\n  --pfe-icon--context: dark;\n}\n\n:host([color=\"default\"]:not([circled])) filter feFlood,\n:host([color=\"default\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--feedback--default, #4f5255)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=\"default\"][circled]:not([circled=\"false\"])) {\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--default, #4f5255));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--feedback--default, #4f5255)));\n  --pfe-icon--context: dark;\n}\n\n:host([color=\"lightest\"]:not([circled])) filter feFlood,\n:host([color=\"lightest\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--surface--lightest, #fff)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=lightest][circled]:not([circled=\"false\"])) {\n  --pfe-icon--context: var(--pfe-theme--color--surface--lightest--context, light);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff)));\n}\n\n:host([color=\"base\"]:not([circled])) filter feFlood,\n:host([color=\"base\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--surface--base, #f0f0f0)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=base][circled]:not([circled=\"false\"])) {\n  --pfe-icon--context: var(--pfe-theme--color--surface--base--context, light);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--base, #f0f0f0));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--base, #f0f0f0)));\n}\n\n:host([color=\"darker\"]:not([circled])) filter feFlood,\n:host([color=\"darker\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--surface--darker, #3c3f42)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=darker][circled]:not([circled=\"false\"])) {\n  --pfe-icon--context: var(--pfe-theme--color--surface--darker--context, dark);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--darker, #3c3f42));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--darker, #3c3f42)));\n}\n\n:host([color=\"darkest\"]:not([circled])) filter feFlood,\n:host([color=\"darkest\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--surface--darkest, #151515)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=darkest][circled]:not([circled=\"false\"])) {\n  --pfe-icon--context: var(--pfe-theme--color--surface--darkest--context, dark);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--darkest, #151515));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--darkest, #151515)));\n}\n\n:host([color=\"complement\"]:not([circled])) filter feFlood,\n:host([color=\"complement\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--surface--complement, #002952)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=complement][circled]:not([circled=\"false\"])) {\n  --pfe-icon--context: var(--pfe-theme--color--surface--complement--context, saturated);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--complement, #002952));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--complement, #002952)));\n}\n\n:host([color=\"accent\"]:not([circled])) filter feFlood,\n:host([color=\"accent\"][circled=\"false\"]) filter feFlood {\n  flood-color: var(--pfe-icon--color, var(--pfe-icon--Color, var(--pfe-theme--color--surface--accent, #004080)));\n}\n\n/* Override circled items with color set to named property */\n:host([color=accent][circled]:not([circled=\"false\"])) {\n  --pfe-icon--context: var(--pfe-theme--color--surface--accent--context, saturated);\n  background-color: var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--accent, #004080));\n  border-color: var(--pfe-icon--BorderColor, var(--pfe-icon--BackgroundColor, var(--pfe-theme--color--surface--accent, #004080)));\n}\n\n:host(.load-failed.has-fallback) svg,\n:host(.load-failed[on-fail=\"collapse\"]) svg,\n:host(.load-failed) svg image {\n  display: none;\n}\n\n:host(.load-failed[on-fail=\"collapse\"]) {\n  max-width: var(--pfe-icon--size, 0);\n  max-height: var(--pfe-icon--size, 0);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(.load-failed[on-fail=\"collapse\"]) {\n    /* IE10+ */\n    width: 0 !important;\n    height: 0 !important;\n  }\n}\n\n:host(.load-failed[on-fail=\"collapse\"]) svg {\n  width: var(--pfe-icon--size, 0);\n  height: var(--pfe-icon--size, 0);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(.load-failed[on-fail=\"collapse\"]) svg {\n    /* IE10+ */\n    width: 0 !important;\n    height: 0 !important;\n  }\n}\n","@import \"../../pfe-sass/pfe-sass\";\n@include pfe-contexts;\n\n$LOCAL: icon;\n\n$LOCAL-VARIABLES: (\n  context: light,\n  size: pfe-var(icon-size),\n  spacing: pfe-var(container-spacer),\n  Padding: 0,\n  BackgroundColor: transparent,\n  BorderWidth: pfe-var(ui--border-width),\n  // @TODO Deprecated variable for changing icon color\n  Color: pfe-broadcasted(text),\n);\n\n// Nested internal variables (pfe-local calls), maps cannot \"self-reference\"\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, ( // Current variable for updating icon color\n    color: pfe-local(Color),\n    BorderColor: pfe-local(BackgroundColor)));\n\n/// ===========================================================================\n/// Component Specific SASS Vars\n/// ===========================================================================\n\n@mixin greyscale-fallback() {\n  background-color: white !important;\n\n  & svg filter feFlood {\n    flood-color: black !important;\n  }\n}\n\n@mixin pfe-icon--sizing($desired-size) {\n  // Respect var if user set CSS var, but fallback to sizing property map\n  max-width: pfe-local(size, $fallback: $desired-size);\n  max-height: pfe-local(size, $fallback: $desired-size);\n\n  @include browser-query(ie11) {\n    width: $desired-size !important;\n    height: $desired-size !important;\n  }\n\n  svg {\n    width: pfe-local(size, $fallback: $desired-size);\n    height: pfe-local(size, $fallback: $desired-size);\n\n    @include browser-query(ie11) {\n      width: $desired-size !important;\n      height: $desired-size !important;\n    }\n  }\n}\n\n:host {\n  --context: #{pfe-local(context)};\n\n  position: relative;\n  display:  inline-block;\n\n  // Content-box model supports sizing while preserving aspect ratio (despite layout)\n  box-sizing:   content-box !important;\n\n  width:        fit-content !important;\n  height:       fit-content !important;\n  line-height:  0;\n\n  max-width:  pfe-local(size);\n  max-height: pfe-local(size);\n\n  @include browser-query(ie11) {\n    width: pfe-fetch(size) !important;\n    height: pfe-fetch(size) !important;\n  }\n  \n  svg {\n    width:  pfe-local(size);\n    height: pfe-local(size);\n\n    @include browser-query(ie11) {\n      width: pfe-fetch(size) !important;\n      height: pfe-fetch(size) !important;\n    }\n  }\n}\n\n:host([block]) {\n  display: block;\n  margin-bottom:  pfe-local(spacing);\n  margin-top:     pfe-local(spacing);\n\n  &:first-child {\n    margin-top: 0;\n  }\n}\n\n:host(:not(.load-failed)) {\n  vertical-align: middle;\n  border-radius: 50%;\n  background-color: pfe-local(BackgroundColor);\n  border: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor);\n  padding: pfe-local(Padding);\n\n  @include browser-query(ie11) {\n    @include greyscale-fallback();\n  }\n\n  // Edge 12+ CSS\n  @include browser-query(edge12) {\n    @include greyscale-fallback();\n  }\n\n  svg image {\n    @include browser-query(ie11) {\n      filter: none;\n    }\n  }\n\n  filter feFlood {\n    flood-color: pfe-local(color);\n  }\n\n  .pfe-icon--fallback {\n    display: none;\n  }\n}\n\n@for $num from 2 through 4 {\n  :host([size=\"#{$num}x\"]) {\n    @include pfe-icon--sizing(#{$num}em);\n  }\n}\n\n$sizing: (\n  xl: 100px,\n  lg: 64px,\n  md: 32px,\n  sm: 14px\n);\n\n// @TODO: Sort out sizing\n@each $label, $size in $sizing {\n  :host([size=\"#{$label}\"]) {\n    @include pfe-icon--sizing($size);\n  }\n}\n\n// @TODO May need to add feedback--darkest colors too\n:host([circled]:not([circled=\"false\"])) {\n  padding: pfe-local(Padding, $fallback: .5em);\n  background-color: pfe-local(BackgroundColor, $fallback: pfe-var(surface--lightest));\n  border-color: pfe-local(BorderColor, $fallback: pfe-local(BackgroundColor, $fallback: pfe-var(surface--border)));\n}\n\n@each $level in (critical, important, moderate, success, info, default) {\n  :host([color=\"#{$level}\"]:not([circled])),\n  :host([color=\"#{$level}\"][circled=\"false\"]) {\n    filter feFlood {\n      flood-color: pfe-local(color,\n        $fallback: pfe-local(Color, $fallback: pfe-var(feedback--#{$level})));\n    }\n  }\n\n\n  /* Override circled items with color set to named property */\n  :host([color=\"#{$level}\"][circled]:not([circled=\"false\"])) {\n    // Respect var if user set CSS var, but fallback to property\n    $desired-color: pfe-local(BackgroundColor, $fallback: pfe-var(feedback--#{$level}));\n    background-color: $desired-color;\n    border-color: pfe-local(BorderColor, $fallback: $desired-color);\n\n    @if $level !=\"moderate\" {\n      --pfe-icon--context: dark;\n    }\n  }\n}\n\n@each $color in (lightest, base, darker, darkest, complement, accent) {\n  :host([color=\"#{$color}\"]:not([circled])),\n  :host([color=\"#{$color}\"][circled=\"false\"]) {\n    filter feFlood {\n      flood-color: pfe-local(color, $fallback: pfe-local(Color, $fallback: pfe-var(surface--#{$color})));\n    }\n  }\n\n\n  /* Override circled items with color set to named property */\n  :host([color=#{$color}][circled]:not([circled=\"false\"])) {\n    --pfe-icon--context: #{pfe-var(surface--#{$color}--context)};\n\n    // Respect var if user set CSS var, but fallback to property\n    $desired-color: pfe-local(BackgroundColor, $fallback: pfe-var(surface--#{$color}));\n    background-color: $desired-color;\n    border-color: pfe-local(BorderColor, $fallback: $desired-color);\n  }\n}\n\n:host(.load-failed.has-fallback) svg,\n:host(.load-failed[on-fail=\"collapse\"]) svg,\n:host(.load-failed) svg image {\n  display: none;\n}\n\n:host(.load-failed[on-fail=\"collapse\"]) {\n  @include pfe-icon--sizing(0);\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}"],"sourceRoot":"../src"}